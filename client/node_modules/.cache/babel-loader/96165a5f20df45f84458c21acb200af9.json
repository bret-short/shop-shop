{"ast":null,"code":"export function pluralize(name, count) {\n  if (count === 1) {\n    return name;\n  }\n\n  return name + \"s\";\n}\nexport function idbPromise(storeName, method, object) {\n  return new Promise((resolve, reject) => {\n    const request = window.indexedDB.open(\"shop-shop\", 1);\n    let db, tx, store;\n\n    request.onupgradeneeded = function (e) {\n      const db = request.result;\n      db.createObjectStore(\"products\", {\n        keyPath: \"_id\"\n      });\n      db.createObjectStore(\"categories\", {\n        keyPath: \"_id\"\n      });\n      db.createObjectStore(\"cart\", {\n        keyPath: \"_id\"\n      });\n    };\n\n    request.onerror = function (e) {\n      console.log(\"There was an error\");\n    };\n\n    request.onsuccess = function (e) {\n      db = request.result;\n      tx = db.transaction(storeName, \"readwrite\");\n      store = tx.objectStore(storeName);\n\n      db.onerror = function (e) {\n        console.log(\"error\", e);\n      };\n\n      switch (method) {\n        case \"put\":\n          store.put(object);\n          resolve(object);\n          break;\n\n        case \"get\":\n          const all = store.getAll();\n\n          all.onsuccess = function () {\n            resolve(all.result);\n          };\n\n          break;\n\n        case \"delete\":\n          store.delete(object._id);\n          break;\n\n        default:\n          console.log(\"No valid method\");\n          break;\n      }\n\n      tx.oncomplete = function () {\n        db.close();\n      };\n    };\n  });\n}","map":{"version":3,"sources":["/Users/bretshort/Desktop/shop-shop/client/src/utils/helpers.js"],"names":["pluralize","name","count","idbPromise","storeName","method","object","Promise","resolve","reject","request","window","indexedDB","open","db","tx","store","onupgradeneeded","e","result","createObjectStore","keyPath","onerror","console","log","onsuccess","transaction","objectStore","put","all","getAll","delete","_id","oncomplete","close"],"mappings":"AAAA,OAAO,SAASA,SAAT,CAAmBC,IAAnB,EAAyBC,KAAzB,EAAgC;AACrC,MAAIA,KAAK,KAAK,CAAd,EAAiB;AACf,WAAOD,IAAP;AACD;;AACD,SAAOA,IAAI,GAAG,GAAd;AACD;AAED,OAAO,SAASE,UAAT,CAAoBC,SAApB,EAA+BC,MAA/B,EAAuCC,MAAvC,EAA+C;AACpD,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,UAAMC,OAAO,GAAGC,MAAM,CAACC,SAAP,CAAiBC,IAAjB,CAAsB,WAAtB,EAAmC,CAAnC,CAAhB;AAEA,QAAIC,EAAJ,EAAQC,EAAR,EAAYC,KAAZ;;AAEAN,IAAAA,OAAO,CAACO,eAAR,GAA0B,UAAUC,CAAV,EAAa;AACrC,YAAMJ,EAAE,GAAGJ,OAAO,CAACS,MAAnB;AAEAL,MAAAA,EAAE,CAACM,iBAAH,CAAqB,UAArB,EAAiC;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAjC;AACAP,MAAAA,EAAE,CAACM,iBAAH,CAAqB,YAArB,EAAmC;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAnC;AACAP,MAAAA,EAAE,CAACM,iBAAH,CAAqB,MAArB,EAA6B;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAA7B;AACD,KAND;;AAQAX,IAAAA,OAAO,CAACY,OAAR,GAAkB,UAAUJ,CAAV,EAAa;AAC7BK,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACD,KAFD;;AAIAd,IAAAA,OAAO,CAACe,SAAR,GAAoB,UAAUP,CAAV,EAAa;AAC/BJ,MAAAA,EAAE,GAAGJ,OAAO,CAACS,MAAb;AAEAJ,MAAAA,EAAE,GAAGD,EAAE,CAACY,WAAH,CAAetB,SAAf,EAA0B,WAA1B,CAAL;AAEAY,MAAAA,KAAK,GAAGD,EAAE,CAACY,WAAH,CAAevB,SAAf,CAAR;;AAEAU,MAAAA,EAAE,CAACQ,OAAH,GAAa,UAAUJ,CAAV,EAAa;AACxBK,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBN,CAArB;AACD,OAFD;;AAIA,cAAQb,MAAR;AACE,aAAK,KAAL;AACEW,UAAAA,KAAK,CAACY,GAAN,CAAUtB,MAAV;AACAE,UAAAA,OAAO,CAACF,MAAD,CAAP;AACA;;AACF,aAAK,KAAL;AACE,gBAAMuB,GAAG,GAAGb,KAAK,CAACc,MAAN,EAAZ;;AACAD,UAAAA,GAAG,CAACJ,SAAJ,GAAgB,YAAY;AAC1BjB,YAAAA,OAAO,CAACqB,GAAG,CAACV,MAAL,CAAP;AACD,WAFD;;AAGA;;AACF,aAAK,QAAL;AACEH,UAAAA,KAAK,CAACe,MAAN,CAAazB,MAAM,CAAC0B,GAApB;AACA;;AACF;AACET,UAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACA;AAhBJ;;AAmBAT,MAAAA,EAAE,CAACkB,UAAH,GAAgB,YAAY;AAC1BnB,QAAAA,EAAE,CAACoB,KAAH;AACD,OAFD;AAGD,KAjCD;AAkCD,GAnDM,CAAP;AAoDD","sourcesContent":["export function pluralize(name, count) {\n  if (count === 1) {\n    return name;\n  }\n  return name + \"s\";\n}\n\nexport function idbPromise(storeName, method, object) {\n  return new Promise((resolve, reject) => {\n    const request = window.indexedDB.open(\"shop-shop\", 1);\n\n    let db, tx, store;\n\n    request.onupgradeneeded = function (e) {\n      const db = request.result;\n\n      db.createObjectStore(\"products\", { keyPath: \"_id\" });\n      db.createObjectStore(\"categories\", { keyPath: \"_id\" });\n      db.createObjectStore(\"cart\", { keyPath: \"_id\" });\n    };\n\n    request.onerror = function (e) {\n      console.log(\"There was an error\");\n    };\n\n    request.onsuccess = function (e) {\n      db = request.result;\n\n      tx = db.transaction(storeName, \"readwrite\");\n\n      store = tx.objectStore(storeName);\n\n      db.onerror = function (e) {\n        console.log(\"error\", e);\n      };\n\n      switch (method) {\n        case \"put\":\n          store.put(object);\n          resolve(object);\n          break;\n        case \"get\":\n          const all = store.getAll();\n          all.onsuccess = function () {\n            resolve(all.result);\n          };\n          break;\n        case \"delete\":\n          store.delete(object._id);\n          break;\n        default:\n          console.log(\"No valid method\");\n          break;\n      }\n\n      tx.oncomplete = function () {\n        db.close();\n      };\n    };\n  });\n}\n"]},"metadata":{},"sourceType":"module"}