{"ast":null,"code":"var _jsxFileName = \"/Users/bretshort/Desktop/shop-shop/client/src/components/Cart/index.js\";\nimport React, { useEffect } from \"react\";\nimport CartItem from \"../CartItem\";\nimport Auth from \"../../utils/auth\";\nimport \"./style.css\";\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { TOGGLE_CART, ADD_MULTIPLE_TO_CART } from \"../../utils/actions\";\nimport { idbPromise, idpPromise } from '../../utils/helpers';\nimport { QUERY_CHECKOUT } from '../../utils/queries';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { useLazyQuery } from '@apollo/react-hooks';\nconst stripePromise = loadStripe('pk_test_TYooMQauvdEDq54NiTphI7jx');\n\nconst Cart = () => {\n  const [state, dispatch] = useStoreContext();\n  const [getCheckout, {\n    data\n  }] = useLazyQuery(QUERY_CHECKOUT);\n  useEffect(() => {\n    async function getCart() {\n      const cart = await idbPromise('cart', 'get');\n      dispatch({\n        type: ADD_MULTIPLE_TO_CART,\n        products: [...cart]\n      });\n    }\n\n    ;\n\n    if (!state.cart.length) {\n      getCart();\n    }\n  }, [state.cart.length, dispatch]);\n  console.log(state);\n\n  function toggleCart() {\n    dispatch({\n      type: TOGGLE_CART\n    });\n  }\n\n  function calculateTotal() {\n    let sum = 0;\n    state.cart.forEach(item => {\n      sum += item.price * item.purchaseQuantity;\n    });\n    return sum.toFixed(2);\n  }\n\n  function submitCheckout() {\n    const productIds = [];\n    getCheckout({\n      variables: {\n        products: productIds\n      }\n    });\n    state.cart.forEach(item => {\n      for (let i = 0; i < item.purchaseQuantity; i++) {\n        productIds.push(item._id);\n      }\n    });\n  }\n\n  if (!state.cartOpen) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cart-closed\",\n      onClick: toggleCart,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      role: \"img\",\n      \"aria-label\": \"trash\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    }, \"\\uD83D\\uDED2\"));\n  }\n\n  useEffect(() => {\n    if (data) {\n      stripePromise.then(res => {\n        res.redirectToCheckout({\n          sessionId: data.checkout.session\n        });\n      });\n    }\n  }, {\n    data\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"close\",\n    onClick: toggleCart,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, \"[close]\"), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, \"Shopping Cart\"), state.cart.length ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, state.cart.map(item => /*#__PURE__*/React.createElement(CartItem, {\n    key: item._id,\n    item: item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex-row space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, \"Total: $\", calculateTotal()), Auth.loggedIn() ? /*#__PURE__*/React.createElement(\"button\", {\n    onClick: submitCheckout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 15\n    }\n  }, \"Checkout\") : /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 15\n    }\n  }, \"(log in to check out)\"))) : /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    role: \"img\",\n    \"aria-label\": \"shocked\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, \"\\uD83D\\uDE31\"), \"You haven't added anything to your cart yet!\"));\n};\n\nexport default Cart;","map":{"version":3,"sources":["/Users/bretshort/Desktop/shop-shop/client/src/components/Cart/index.js"],"names":["React","useEffect","CartItem","Auth","useStoreContext","TOGGLE_CART","ADD_MULTIPLE_TO_CART","idbPromise","idpPromise","QUERY_CHECKOUT","loadStripe","useLazyQuery","stripePromise","Cart","state","dispatch","getCheckout","data","getCart","cart","type","products","length","console","log","toggleCart","calculateTotal","sum","forEach","item","price","purchaseQuantity","toFixed","submitCheckout","productIds","variables","i","push","_id","cartOpen","then","res","redirectToCheckout","sessionId","checkout","session","map","loggedIn"],"mappings":"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","sourcesContent":["import React, {useEffect} from \"react\";\nimport CartItem from \"../CartItem\";\nimport Auth from \"../../utils/auth\";\nimport \"./style.css\";\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { TOGGLE_CART, ADD_MULTIPLE_TO_CART } from \"../../utils/actions\";\nimport {idbPromise, idpPromise} from '../../utils/helpers';\nimport {QUERY_CHECKOUT} from '../../utils/queries';\nimport {loadStripe} from '@stripe/stripe-js';\nimport {useLazyQuery} from '@apollo/react-hooks';\n\nconst stripePromise = loadStripe('pk_test_TYooMQauvdEDq54NiTphI7jx')\n\nconst Cart = () => {\n  const [state, dispatch] = useStoreContext();\n  const [getCheckout, {data}] = useLazyQuery(QUERY_CHECKOUT);\n\n  useEffect(() => {\n    async function getCart() {\n      const cart = await idbPromise('cart', 'get');\n      dispatch({type: ADD_MULTIPLE_TO_CART, products: [...cart]});\n    };\n\n    if (!state.cart.length) {\n      getCart();\n    }\n  }, [state.cart.length, dispatch]);\n\n  \n  console.log(state);\n  function toggleCart() {\n    dispatch({ type: TOGGLE_CART });\n  }\n\n  function calculateTotal() {\n    let sum = 0;\n    state.cart.forEach((item) => {\n      sum += item.price * item.purchaseQuantity;\n    });\n    return sum.toFixed(2);\n  }\n\n  function submitCheckout() {\n    const productIds = [];\n    getCheckout({\n      variables: {products: productIds}\n    });\n\n    state.cart.forEach((item) => {\n      for (let i = 0; i < item.purchaseQuantity; i++) {\n        productIds.push(item._id);\n      }\n    });\n  }\n\n  if (!state.cartOpen) {\n    return (\n      <div className=\"cart-closed\" onClick={toggleCart}>\n        <span role=\"img\" aria-label=\"trash\">\n          🛒\n        </span>\n      </div>\n    );\n  }\n\n  useEffect(() => {\n    if (data) {\n      stripePromise.then((res) => {\n        res.redirectToCheckout({sessionId: data.checkout.session});\n      });\n    }\n  }, {data});\n\n  return (\n    <div className=\"cart\">\n      <div className=\"close\" onClick={toggleCart}>\n        [close]\n      </div>\n      <h2>Shopping Cart</h2>\n      {state.cart.length ? (\n        <div>\n          {state.cart.map((item) => (\n            <CartItem key={item._id} item={item} />\n          ))}\n          <div className=\"flex-row space-between\">\n            <strong>Total: ${calculateTotal()}</strong>\n            {Auth.loggedIn() ? (\n              <button\n              onClick={submitCheckout}>\n                Checkout\n                </button>\n            ) : (\n              <span>(log in to check out)</span>\n            )}\n          </div>\n        </div>\n      ) : (\n        <h3>\n          <span role=\"img\" aria-label=\"shocked\">\n            😱\n          </span>\n          You haven't added anything to your cart yet!\n        </h3>\n      )}\n    </div>\n  );\n};\n\nexport default Cart;\n"]},"metadata":{},"sourceType":"module"}